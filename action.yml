name: "Install and Connect SNX VPN"
description: "Installs Check Point SNX client and connects to VPN."
inputs:
  snx_user:
    description: Username for the authentication to the server.
    required: true
  snx_pass:
    description: Password for the user. Client Cert is not supported by this action.
    required: true
  snx_server:
    description: Server to connect to.
    required: true
  root_ca_fingerprint:
    description: Fingerprint phrase of the server certificate. This is optional, if not provided the client will acknowledge any server without checking.
    required: false
outputs:
  office_ip:
    value: ${{ steps.connect_snx.outputs.office_ip }}
    description: "The Office Mode IP assigned by the SNX VPN."
  dns_server:
    value: ${{ steps.connect_snx.outputs.dns_server }}
    description: "The DNS server provided by SNX VPN."
  dns_suffix:
    value: ${{ steps.connect_snx.outputs.dns_suffix }}
    description: "The DNS suffix provided by SNX VPN."
  timeout:
    value: ${{ steps.connect_snx.outputs.timeout }}
    description: "The session timeout of the VPN."
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Install dependencies and SNX
      shell: bash
      run: |
        sha256sum installer/snx_install_linux30.sh.sha256 -c
        sudo dpkg --add-architecture i386
        sudo apt-get update -qq
        sudo apt-get install -qq --no-install-recommends --no-upgrade -y libx11-6:i386 libstdc++5:i386 libpam0g:i386 lib32readline8 expect
        sudo installer/snx_install_linux30.sh
    - name: Connect to SNX VPN
      id: connect_snx
      shell: bash
      run: |
        expect ./connect_snx.exp
        echo 'Expect script done'
        OFFICE_IP=$(grep "Office Mode IP" /tmp/snx_output.log | awk -F': ' '{print $2}')
        DNS_SERVER=$(grep "DNS Server" /tmp/snx_output.log | awk -F': ' '{print $2}')
        DNS_SUFFIX=$(grep "DNS Suffix" /tmp/snx_output.log | awk -F': ' '{print $2}')
        TIMEOUT=$(grep "Timeout" /tmp/snx_output.log | awk -F': ' '{print $2}')
        sudo bash -c "echo 'nameserver $DNS_SERVER' > /etc/resolv.conf"
        echo "office_ip=${OFFICE_IP}" >> $GITHUB_OUTPUT
        echo "dns_server=${DNS_SERVER}" >> $GITHUB_OUTPUT
        echo "dns_suffix=${DNS_SUFFIX}" >> $GITHUB_OUTPUT
        echo "timeout=${TIMEOUT}" >> $GITHUB_OUTPUT
      env:
        SNX_USER: ${{ inputs.snx_user }}
        SNX_PASS: ${{ inputs.snx_pass }}
        SNX_SERVER: ${{ inputs.snx_server }}
        ROOT_CA_FINGERPRINT: ${{ inputs.root_ca_fingerprint }}